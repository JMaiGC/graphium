module_type: "MultitaskFromSmilesDataModule"
args:
  prepare_dict_or_graph: pyg:graph
  featurization_n_jobs: 30
  featurization_progress: True
  featurization_backend: "loky"
  processed_graph_data_path: "../datacache/neurips2023-small/"
  num_workers: 30 # -1 to use all
  persistent_workers: False
  task_specific_args:
    qm9:
      df: null
      df_path: ${constants.data_dir}/qm9.csv.gz
      # wget https://storage.googleapis.com/graphium-public/datasets/neurips_2023/Small-dataset/qm9.csv.gz
      # or set path as the URL directly
      smiles_col: "smiles"
      label_cols: ["A", "B", "C", "mu", "alpha", "homo", "lumo", "gap", "r2", "zpve", "u0", "u298", "h298", "g298", "cv", "u0_atom", "u298_atom", "h298_atom", "g298_atom"]
      # sample_size: 2000 # use sample_size for test
      splits_path: ${constants.data_dir}/qm9_random_splits.pt  # Download with `wget https://storage.googleapis.com/graphium-public/datasets/neurips_2023/Small-dataset/qm9_random_splits.pt`
      seed: ${constants.seed} #*seed
      task_level: graph
      label_normalization:
        normalize_val_test: True
        method: "normal"

    tox21:
      df: null
      df_path: ${constants.data_dir}/Tox21-7k-12-labels.csv.gz
      # wget https://storage.googleapis.com/graphium-public/datasets/neurips_2023/Small-dataset/Tox21-7k-12-labels.csv.gz
      # or set path as the URL directly
      smiles_col: "smiles"
      label_cols: ["NR-AR", "NR-AR-LBD", "NR-AhR", "NR-Aromatase", "NR-ER", "NR-ER-LBD", "NR-PPAR-gamma", "SR-ARE", "SR-ATAD5", "SR-HSE", "SR-MMP", "SR-p53"]
      # sample_size: 2000 # use sample_size for test
      splits_path: ${constants.data_dir}/Tox21_random_splits.pt  # Download with `wget https://storage.googleapis.com/graphium-public/datasets/neurips_2023/Small-dataset/Tox21_random_splits.pt`
      seed: ${constants.seed}
      task_level: graph

    zinc:
      df: null
      df_path: ${constants.data_dir}/ZINC12k.csv.gz
      # wget https://storage.googleapis.com/graphium-public/datasets/neurips_2023/Small-dataset/ZINC12k.csv.gz
      # or set path as the URL directly
      smiles_col: "smiles"
      label_cols: ["SA", "logp", "score"]
      # sample_size: 2000 # use sample_size for test
      splits_path: ${constants.data_dir}/ZINC12k_random_splits.pt  # Download with `wget https://storage.googleapis.com/graphium-public/datasets/neurips_2023/Small-dataset/ZINC12k_random_splits.pt`
      seed: ${constants.seed}
      task_level: graph
      label_normalization:
        normalize_val_test: True
        method: "normal"
  featurization:
    atom_property_list_onehot: [atomic-number, group, period, total-valence]
    atom_property_list_float: [degree, formal-charge, radical-electron, aromatic, in-ring]
    edge_property_list: [bond-type-onehot, stereo, in-ring]
    add_self_loop: False
    explicit_H: False # if H is included
    use_bonds_weights: False
    pos_encoding_as_features:
      pos_types:
        lap_eigvec:
          pos_level: node
          pos_type: laplacian_eigvec
          num_pos: 8
          normalization: "none" # normalization already applied on the eigen vectors
          disconnected_comp: True # if eigen values/vector for disconnected graph are included
        lap_eigval:
          pos_level: node
          pos_type: laplacian_eigval
          num_pos: 8
          normalization: "none" # normalization already applied on the eigen vectors
          disconnected_comp: True # if eigen values/vector for disconnected graph are included
        rw_pos: # use same name as pe_encoder
          pos_level: node
          pos_type: rw_return_probs
          ksteps: 16
